image: node:22

stages:
  - build
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

before_script:
  - yarn install --frozen-lockfile


# üìå –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ–¥ Merge Request
build:
  stage: build
  script:
    - yarn lint
    - yarn build
  only:
    - merge_requests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - dist/  


# üìå –î–µ–ø–ª–æ–π –≤ Dockploy —á–µ—Ä–µ–∑ API (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ merge)
deploy:
  stage: deploy
  script:
    - |
      
      if [ -z "$DOCKPLOY_API_URL" ] || [ -z "$APPLICATION_ID" ] || [ -z "$DOCKPLOY_TOKEN" ]; then
        echo "Error: Required variables are not set!"
        exit 1
      fi
      
      # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
      RESPONSE=$(curl -s -w "\n%{http_code}" -X 'POST' "$DOKPLOY_API_URL" \
        -H 'accept: application/json' \
        -H 'Content-Type: application/json' \
        -H "x-api-key: $DOKPLOY_API_TOKEN" \
        -d '{
          "applicationId": "'"$DOKPLOY_APPLICATION_ID"'"
        }'
      )
      HTTP_STATUS=${RESPONSE: -3}
      BODY=${RESPONSE%???}
      
      echo "Response: $BODY"
      echo "HTTP Status: $HTTP_STATUS"
      
      if [[ $HTTP_STATUS -ge 200 && $HTTP_STATUS -lt 300 ]]; then
        echo "Deployment successful!"
      else
        echo "Deployment failed with status $BODY $HTTP_STATUS"
        exit 1
      fi
  only:
    - stage
    - main
  resource_group: exclusive_pipeline
